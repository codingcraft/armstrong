<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:task="http://www.springframework.org/schema/task" xmlns:amq="http://activemq.apache.org/schema/core"
	   xmlns:jms="http://www.springframework.org/schema/jms"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

	<context:property-placeholder location="classpath:/armstrong.properties"/>

	<context:annotation-config />

	<context:component-scan base-package="uk.co.codingcraft.armstrong" />

	<jpa:repositories base-package="uk.co.codingcraft.armstrong.dao" />

   <tx:annotation-driven />

	<task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>

	<task:executor id="myExecutor" pool-size="5"/>

	<task:scheduler id="myScheduler" pool-size="10"/>

	<!--  lets create an embedded ActiveMQ Broker -->
	<amq:broker useJmx="false" persistent="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>

	 <amq:queue id="destination"  physicalName="fetchfeed"/>

	<amq:connectionFactory id="activemqConnectionFactory" brokerURL="vm://localhost" clientIDPrefix="spiderclient" >
		<amq:properties>
			<amq:redeliveryPolicy
					maximumRedeliveries="20"
					collisionAvoidancePercent="15"
					initialRedeliveryDelay="5000"/>
		</amq:properties>
	</amq:connectionFactory>

	<bean id="cachedConnectionFactory"
    class="org.springframework.jms.connection.CachingConnectionFactory">
	<property name="targetConnectionFactory" ref="activemqConnectionFactory"/>
    </bean>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" >
        <property name="connectionFactory" ref="cachedConnectionFactory" />
        <property name="defaultDestinationName" value="fetchfeed" />
    </bean>

	<jms:listener-container
			container-type="default"
			connection-factory="cachedConnectionFactory"
			concurrency="10">
		<jms:listener ref="spiderListener" destination="destination"/>
	</jms:listener-container>


   <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
      <property name="dataSource" ref="dataSource" />
   </bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" lazy-init="true">
      <property name="persistenceUnitName" value="armstrong-core" />
      <property name="dataSource" ref="dataSource" />
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            <property name="showSql" value="${database.showSql:false}" />
            <property name="generateDdl" value="false" />
            <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
         </bean>
      </property>
   </bean>


	<!-- BoneCP configuration -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${database.class}" />
		<property name="jdbcUrl" value="${database.url}" />
		<property name="username" value="${database.username}"/>
		<property name="password" value="${database.password}"/>
		<property name="idleConnectionTestPeriodInSeconds" value="60"/>
		<property name="idleMaxAgeInSeconds" value="240"/>
		<property name="queryExecuteTimeLimitInMs" value="1000" />
		<property name="closeConnectionWatch" value="${database.debug:false}" />
		<property name="maxConnectionsPerPartition" value="30"/>
		<property name="minConnectionsPerPartition" value="10"/>
		<property name="logStatementsEnabled" value="${database.debug:false}" />
		<property name="partitionCount" value="3"/>
		<property name="acquireIncrement" value="5"/>
		<property name="statementsCacheSize" value="100"/>
		<property name="releaseHelperThreads" value="3"/>
		<property name="defaultAutoCommit" value="false" />
	</bean>
</beans>